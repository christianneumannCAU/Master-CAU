qqline(rg_tab$AP_EXPONENT)
ggdensity(rg_tab, x = "AP_EXPONENT", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-2, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$THETA_POWER)
qqnorm(rg_tab$THETA_POWER)
qqline(rg_tab$THETA_POWER)
ggdensity(rg_tab, x = "THETA_POWER", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$ALPHA_POWER)
qqnorm(rg_tab$ALPHA_POWER)
qqline(rg_tab$ALPHA_POWER)
ggdensity(rg_tab, x = "ALPHA_POWER", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$BETA_POWER)
qqnorm(rg_tab$BETA_POWER)
qqline(rg_tab$BETA_POWER)
ggdensity(rg_tab, x = "BETA_POWER", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# root mean square
hist(rg_tab$root_mean_square)
qqnorm(rg_tab$root_mean_square)
qqline(rg_tab$root_mean_square)
ggdensity(rg_tab, x = "root_mean_square", fill = "lightgray", title = "root_mean_square") +
scale_x_continuous(limits = c(-2, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# AP_EXPONENT
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
ggdensity(rg_tab, x = "z_exp", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$z_theta)
qqnorm(rg_tab$z_theta)
qqline(rg_tab$z_theta)
ggdensity(rg_tab, x = "z_theta", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$z_alpha)
qqnorm(rg_tab$z_alpha)
qqline(rg_tab$z_alpha)
ggdensity(rg_tab, x = "z_alpha", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$z_beta)
qqnorm(rg_tab$z_beta)
qqline(rg_tab$z_beta)
ggdensity(rg_tab, x = "z_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# root mean square
hist(rg_tab$z_rms)
qqnorm(rg_tab$z_rms)
qqline(rg_tab$z_rms)
ggdensity(rg_tab, x = "z_rms", fill = "lightgray", title = "root mean square") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
View(rg_tab)
## try log-transformation ##
rg_tab$l_theta <- log10(rg_tab$THETA_POWER)
rg_tab$l_alpha <- log10(rg_tab$ALPHA_POWER)
rg_tab$l_beta <- log10(rg_tab$BETA_POWER)
# THETA_POWER
ggdensity(rg_tab, x = "l_theta", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
ggdensity(rg_tab, x = "l_alpha", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
ggdensity(rg_tab, x = "l_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# we can't assume normal distribution for distance
hist(rg_tab$distance)
qqnorm(rg_tab$distance)
qqline(rg_tab$distance)
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
#visualize data
ggscatter(rg_tab, x = "distance", y = "z_beta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "beta power")
# kendall correlation which is non-parametric (spearman has issues with ties)
H <- cor.test(rg_tab$distance,rg_tab$z_beta, method = "kendall")
H
## exploring ##
# regression is robust (source), data is close to normal distribution
full_model_distance <- lme(fixed=distance ~ z_exp + z_theta + z_alpha + z_beta, random=~1|ID, data=rg_tab)
summary(full_model_distance)
anova(full_model_distance)
full_model_depth <- lme(fixed=DEPTH ~ z_exp + z_theta + z_alpha + z_beta, random=~1|ID, data=rg_tab)
summary(full_model_depth)
anova(full_model_depth)
#aperiodic exponent is significant!
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "depth of electrode", ylab = "aperiodic exponent")
#Ein deutlich niedrigerer aperiodischer Exponent bei -5, FALLS 0 die Spitze der Elektrode ist,
#dann wÃ¤re -5 exakt da, wo die Elektrode sich genau im STN befindet (IST DAS SO?)
# (Theta auch)
ggscatter(rg_tab, x = "DEPTH", y = "z_theta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "theta power")
## Set libraries ##
library(ggplot2)
library(ggpubr)
library(moments)
library(nlme)
## read data ##
rg_tab <- read.csv("../02_data/04_final/regression_table.csv")
tt_tab <- read.csv("../02_data/04_final/ttest_table.csv")
## Add new variable for distance to target (got determined by MRT beforehand - the Depth 0 is the target)##
rg_tab$distance <- abs(rg_tab$DEPTH)
## Assign data types ##
rg_tab$ID <- as.factor(rg_tab$ID)
rg_tab$SIDE <- as.factor(rg_tab$SIDE)
rg_tab$CHANNEL <- as.factor(rg_tab$CHANNEL)
## Test for normal distribution is bad: gets significant automatically with big samplesize ##
shapiro.test(rg_tab$AP_EXPONENT)
# AP_EXPONENT
hist(rg_tab$AP_EXPONENT)
qqnorm(rg_tab$AP_EXPONENT)
qqline(rg_tab$AP_EXPONENT)
ggdensity(rg_tab, x = "AP_EXPONENT", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-2, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$THETA_POWER)
qqnorm(rg_tab$THETA_POWER)
qqline(rg_tab$THETA_POWER)
ggdensity(rg_tab, x = "THETA_POWER", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$ALPHA_POWER)
qqnorm(rg_tab$ALPHA_POWER)
qqline(rg_tab$ALPHA_POWER)
ggdensity(rg_tab, x = "ALPHA_POWER", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$BETA_POWER)
qqnorm(rg_tab$BETA_POWER)
qqline(rg_tab$BETA_POWER)
ggdensity(rg_tab, x = "BETA_POWER", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# root mean square
hist(rg_tab$root_mean_square)
qqnorm(rg_tab$root_mean_square)
View(rg_tab)
# root mean square
hist(rg_tab$root_mean_square)
## Set libraries ##
library(ggplot2)
library(ggpubr)
library(moments)
library(nlme)
## read data ##
rg_tab <- read.csv("../02_data/04_final/regression_table.csv")
tt_tab <- read.csv("../02_data/04_final/ttest_table.csv")
## Add new variable for distance to target (got determined by MRT beforehand - the Depth 0 is the target)##
rg_tab$distance <- abs(rg_tab$DEPTH)
## Assign data types ##
rg_tab$ID <- as.factor(rg_tab$ID)
rg_tab$SIDE <- as.factor(rg_tab$SIDE)
rg_tab$CHANNEL <- as.factor(rg_tab$CHANNEL)
## Test for normal distribution is bad: gets significant automatically with big samplesize ##
shapiro.test(rg_tab$AP_EXPONENT)
# AP_EXPONENT
hist(rg_tab$AP_EXPONENT)
qqnorm(rg_tab$AP_EXPONENT)
qqline(rg_tab$AP_EXPONENT)
ggdensity(rg_tab, x = "AP_EXPONENT", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-2, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$THETA_POWER)
qqnorm(rg_tab$THETA_POWER)
qqline(rg_tab$THETA_POWER)
ggdensity(rg_tab, x = "THETA_POWER", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$ALPHA_POWER)
qqnorm(rg_tab$ALPHA_POWER)
qqline(rg_tab$ALPHA_POWER)
ggdensity(rg_tab, x = "ALPHA_POWER", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$BETA_POWER)
qqnorm(rg_tab$BETA_POWER)
qqline(rg_tab$BETA_POWER)
ggdensity(rg_tab, x = "BETA_POWER", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# root mean square
hist(rg_tab$root_mean_square)
qqnorm(rg_tab$root_mean_square)
qqline(rg_tab$root_mean_square)
ggdensity(rg_tab, x = "root_mean_square", fill = "lightgray", title = "root_mean_square") +
scale_x_continuous(limits = c(-2, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# AP_EXPONENT
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
ggdensity(rg_tab, x = "z_exp", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$z_theta)
qqnorm(rg_tab$z_theta)
qqline(rg_tab$z_theta)
ggdensity(rg_tab, x = "z_theta", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$z_alpha)
qqnorm(rg_tab$z_alpha)
qqline(rg_tab$z_alpha)
ggdensity(rg_tab, x = "z_alpha", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$z_beta)
qqnorm(rg_tab$z_beta)
qqline(rg_tab$z_beta)
ggdensity(rg_tab, x = "z_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# root mean square
hist(rg_tab$z_rms)
qqnorm(rg_tab$z_rms)
qqline(rg_tab$z_rms)
ggdensity(rg_tab, x = "z_rms", fill = "lightgray", title = "root mean square") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# we can't assume normal distribution for distance
hist(rg_tab$distance)
qqnorm(rg_tab$distance)
qqline(rg_tab$distance)
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
#visualize data
ggscatter(rg_tab, x = "distance", y = "z_beta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "beta power")
## exploring ##
# regression is robust (source), data is close to normal distribution
full_model_distance <- lme(fixed=distance ~ z_exp + z_theta + z_alpha + z_beta + z_rms, random=~1|ID, data=rg_tab)
summary(full_model_distance)
anova(full_model_distance)
summary(full_model_distance)
anova(full_model_distance)
summary(full_model_distance)
anova(full_model_distance)
anova(full_model_distance)
summary(full_model_distance)
anova(full_model_distance)
full_model_depth <- lme(fixed=DEPTH ~ z_exp + z_theta + z_alpha + z_beta + z_rms, random=~1|ID, data=rg_tab)
summary(full_model_depth)
anova(full_model_depth)
#aperiodic exponent is significant!
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "depth of electrode", ylab = "aperiodic exponent")
#Ein deutlich niedrigerer aperiodischer Exponent bei -5, FALLS 0 die Spitze der Elektrode ist,
#dann wÃ¤re -5 exakt da, wo die Elektrode sich genau im STN befindet (IST DAS SO?)
# (Theta auch)
ggscatter(rg_tab, x = "DEPTH", y = "z_theta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "theta power")
#new Model
new_model_1 <- lme(fixed=distance ~ z_exp + z_theta + z_rms, random=~1|ID, data=rg_tab)
summary(full_model_distance)
anova(full_model_distance)
rm(new_model_1)
#new Model
new_model_distance <- lme(fixed=distance ~ z_exp + z_beta + z_rms, random=~1|ID, data=rg_tab)
summary(new_model_1)
summary(new_model_distance)
anova(new_model_distance)
summary(full_model_depth)
anova(full_model_depth)
new_model_depth <- lme(fixed=distance ~ z_exp + z_theta + z_rms, random=~1|ID, data=rg_tab)
summary(new_model_depth)
anova(new_model_depth)
new_model_depth <- lme(fixed=DEPTH ~ z_exp + z_theta + z_rms, random=~1|ID, data=rg_tab)
summary(new_model_depth)
anova(new_model_depth)
anova(full_model_depth)
#Ein deutlich niedrigerer aperiodischer Exponent bei -5, FALLS 0 die Spitze der Elektrode ist,
#dann wÃ¤re -5 exakt da, wo die Elektrode sich genau im STN befindet (IST DAS SO?)
# (Theta auch)
ggscatter(rg_tab, x = "DEPTH", y = "z_theta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "theta power")
#aperiodic exponent is significant!
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "depth of electrode", ylab = "aperiodic exponent")
View(tt_tab)
# BETA_POWER
ggdensity(rg_tab, x = "l_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "z_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "z_exp", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# check normal distribution of difference for paired t-test
dif_beta = tt_tab$far_beta - tt_tab$near_beta
shapiro.test(dif_beta)
shapiro.test(dif_exp)
shapiro.test(dif_rms)
dif_exp <- tt_tab$far_exp - tt_tab$near_exp
dif_rms <- tt_tab$far_rms - tt_tab$far_rms
shapiro.test(dif_beta)
shapiro.test(dif_exp)
shapiro.test(dif_rms)
dif_rms
View(tt_tab)
dif_rms <- tt_tab$far_rms - tt_tab$near_rms
shapiro.test(dif_beta)
shapiro.test(dif_exp)
shapiro.test(dif_rms)
hist(dif_beta)
hist(dif_exp)
hist(dif_rms)
# we can assume normal distribution
ttest_rms <- t.test(tt_tab$near_rms, tt_tab$far_rms, paired = T)
ttest_beta <- t.test(tt_tab$near_beta, tt_tab$far_beta, paired = T)
ttest_exp <- t.test(tt_tab$near_exp, tt_tab$far_exp, paired = T)
ttest_beta
# we can assume normal distribution
ttest_rms <- t.test(tt_tab$near_rms, tt_tab$far_rms, paired = T, "greater")
ttest_beta <- t.test(tt_tab$near_beta, tt_tab$far_beta, paired = T, "greater")
ttest_exp <- t.test(tt_tab$near_exp, tt_tab$far_exp, paired = T, "less")
ttest_beta
ttest_exp
ttest_rms
# we can't assume normal distribution for distance
hist(rg_tab$distance)
qqnorm(rg_tab$distance)
qqline(rg_tab$distance)
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
#visualize data
ggscatter(rg_tab, x = "distance", y = "z_beta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "beta power")
# kendall correlation which is non-parametric (spearman has issues with ties)
H <- cor.test(rg_tab$distance,rg_tab$z_beta, method = "kendall")
H
summary(full_model_distance)
anova(full_model_distance)
summary(full_model_distance)
anova(full_model_distance)
summary(full_model_depth)
anova(full_model_depth)
summary(full_model_depth)
summary(full_model_depth)
anova(full_model_depth)
summary(full_model_depth)
coef(full_model_distance)
deviance(full_model_distance)
resid(full_model_distance)
summary(full_model_distance)
confint(full_model_distance)
intervals(full_model_distance)
mat <- cor(rg_tab$distance, rg_tab$DEPTH, rg_tab$z_exp, rg_tab$z_theta, rg_tab$z_alpha, rg_tab$z_beta, rg_tab$z_rms, method = "kendall")
## correlation matrix ##
short <- data.frame(rg_tab$distance, rg_tab$DEPTH, rg_tab$z_exp, rg_tab$z_theta, rg_tab$z_alpha, rg_tab$z_beta, rg_tab$z_rms)
short
mat <- cor(short, method = "kendall")
mat
## correlation matrix ##
# we can't assume normal distribution for distance or depth
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "depth", fill = "lightgray", title = "Depth of electrode") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## correlation matrix ##
# we can't assume normal distribution for distance or depth
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "DEPTH", fill = "lightgray", title = "Depth of electrode") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
hist(rg_tab$DEPTH)
mat
#visualize data
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
#visualize data
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "depth of electrode", ylab = "aperiodic exponent")
#visualize data
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "depth of electrode", ylab = "aperiodic exponent")
#visualize data
ggscatter(rg_tab, x = "distance", y = "z_beta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "beta power")
#visualize data
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "distance to STN", ylab = "beta power")
#visualize data
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Depth of electrode", ylab = "aperiodic exponent")
mat
## exploring ##
# regression is robust (source), data is close to normal distribution
full_model_depth <- lme(fixed=DEPTH ~ z_exp + z_rms, random=~1|ID, data=rg_tab)
summary(full_model_depth)
anova(full_model_depth)
#new Model
new_model_distance <- lme(fixed=distance ~ z_beta + z_rms, random=~1|ID, data=rg_tab)
summary(new_model_distance)
anova(new_model_distance)
#new Model
new_model_distance <- lme(fixed=distance ~ z_rms, random=~1|ID, data=rg_tab)
summary(new_model_distance)
anova(new_model_distance)
ttest_beta
ttest_exp
ggdensity(rg_tab, x = "z_beta", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
#visualize found correlations
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Depth of electrode", ylab = "aperiodic exponent")
ggscatter(rg_tab, x = "DEPTH", y = "z_rms", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Depth of electrode", ylab = "root mean square")
ggscatter(rg_tab, x = "distance", y = "z_rms", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Distance to target", ylab = "root mean square")
ggscatter(rg_tab, x = "z_beta", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Depth of electrode", ylab = "aperiodic exponent")
ggscatter(rg_tab, x = "distance", y = "z_beta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Depth of electrode", ylab = "aperiodic exponent")
plot(full_model_depth)
fixed.effects(full_model_depth)
fitted(full_model_depth)
m <- lme(fixed=DEPTH ~ z_exp + z_rms + z_beta + z_theta, random=~1|ID, data=rg_tab)
summary(m)
anova(m)
cortab <- cor(short, method = "kendall")
cortab
summary(m)
summary(full_model_depth)
anova(full_model_depth)
## Set libraries ##
library(ggplot2)
library(ggpubr)
library(moments)
library(nlme)
## read data ##
rg_tab <- read.csv("../02_data/04_final/regression_table.csv")
tt_tab <- read.csv("../02_data/04_final/ttest_table.csv")
## Add new variable for distance to target (got determined by MRT beforehand - the Depth 0 is the target)##
rg_tab$distance <- abs(rg_tab$DEPTH)
## Assign data types ##
rg_tab$ID <- as.factor(rg_tab$ID)
rg_tab$SIDE <- as.factor(rg_tab$SIDE)
rg_tab$CHANNEL <- as.factor(rg_tab$CHANNEL)
## Test for normal distribution is bad: gets significant automatically with big samplesize ##
shapiro.test(rg_tab$AP_EXPONENT)
# check normal distribution of difference for paired t-test
dif_beta <- tt_tab$far_beta - tt_tab$near_beta
dif_exp <- tt_tab$far_exp - tt_tab$near_exp
dif_rms <- tt_tab$far_rms - tt_tab$near_rms
shapiro.test(dif_beta)
shapiro.test(dif_exp)
shapiro.test(dif_rms)
# we can assume normal distribution
ttest_rms <- t.test(tt_tab$near_rms, tt_tab$far_rms, paired = T, "greater")
ttest_beta <- t.test(tt_tab$near_beta, tt_tab$far_beta, paired = T, "greater")
ttest_exp <- t.test(tt_tab$near_exp, tt_tab$far_exp, paired = T, "less")
## correlation matrix ##
# we can't assume normal distribution for distance or depth
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to target") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "DEPTH", fill = "lightgray", title = "Depth of electrode") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# kendall correlation which is non-parametric (spearman has issues with ties)
short <- data.frame(rg_tab$distance, rg_tab$DEPTH, rg_tab$z_exp, rg_tab$z_theta, rg_tab$z_alpha, rg_tab$z_beta, rg_tab$z_rms)
cortab <- cor(short, method = "kendall")
cortab
#visualize found correlations
ggscatter(rg_tab, x = "DEPTH", y = "z_exp", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Depth of electrode", ylab = "aperiodic exponent")
summary(full_model_depth)
# regression is robust (source), data is close to normal distribution
full_model_depth <- lme(fixed=DEPTH ~ z_exp + z_rms, random=~1|ID, data=rg_tab)
summary(full_model_depth)
anova(full_model_depth)
ggscatter(rg_tab, x = "z_exp", y = "z_rms", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "kendall", xlab = "Distance to target", ylab = "root mean square")
cortab
