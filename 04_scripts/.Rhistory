rg_tab$log_alpha <- log10/(rg_tab$z_alpha+5)
rg_tab$log_alpha <- log10/(rg_tab$z_alpha+5)
rg_tab$log_alpha <- log10(rg_tab$z_alpha+5)
hist(rg_tab$log_alpha)
qqnorm(rg_tab$log_alpha)
qqline(rg_tab$log_alpha)
shapiro.test(rg_tab$log_alpha)
rg_tab$log_alpha <- 1/(rg_tab$z_alpha+5)
rg_tab$log_beta <- log10(rg_tab$z_beta)
rg_tab$log_beta <- log10(rg_tab$z_beta+5)
hist(rg_tab$log_beta)
qqnorm(rg_tab$log_beta)
qqline(rg_tab$log_beta)
shapiro.test(rg_tab$log_beta)
# try transforming exept ap_exp
rg_tab$t_exp <- sqrt(max(rg_tab$z_exp+1) - rg_tab$z_exp)
## visualizing log data
hist(rg_tab$t_exp)
qqnorm(rg_tab$t_exp)
qqline(rg_tab$t_exp)
shapiro.test(rg_tab$t_exp)
## visualizing log data
hist(rg_tab$t_exp)
# try transforming exept ap_exp
rg_tab$t_exp <- log10(max(rg_tab$z_exp+1) - rg_tab$z_exp)
## visualizing log data
hist(rg_tab$t_exp)
qqnorm(rg_tab$t_exp)
qqline(rg_tab$t_exp)
shapiro.test(rg_tab$t_exp)
## visualizing log data
hist(rg_tab$t_exp)
# try transforming exept ap_exp
rg_tab$t_exp <- sqrt(max(rg_tab$z_exp+1) - rg_tab$z_exp)
## visualizing log data
hist(rg_tab$t_exp)
qqnorm(rg_tab$t_exp)
qqline(rg_tab$t_exp)
shapiro.test(rg_tab$t_exp)
## visualizing z data
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
shapiro.test(rg_tab$z_exp)
## visualizing log data
hist(rg_tab$t_exp)
## visualizing z data
hist(rg_tab$z_exp)
hist(rg_tab$DEPTH)
hist(rg_tab$distance)
## visualizing data
hist(rg_tab$AP_EXPONENT)
hist(rg_tab$THETA_POWER)
hist(rg_tab$ALPHA_POWER)
hist(rg_tab$BETA_POWER)
## visualizing z data
hist(rg_tab$z_exp)
hist(rg_tab$z_theta)
hist(rg_tab$z_alpha)
hist(rg_tab$z_beta)
## visualizing log data
hist(rg_tab$t_exp)
hist(rg_tab$t_theta)
hist(rg_tab$t_alpha)
## read data
rg_tab <- read.csv("C:/Users/acer/Desktop/Master CAU/02_data/04_final/regression_table.csv")
## Add new variable for distance to STN
rg_tab$distance <- abs(rg_tab$DEPTH)
## Test for normal distribution useless: gets significant automatically with big samplesize
shapiro.test(rg_tab$AP_EXPONENT)
## visualizing data
hist(rg_tab$AP_EXPONENT)
qqnorm(rg_tab$AP_EXPONENT)
qqline(rg_tab$AP_EXPONENT)
hist(rg_tab$THETA_POWER)
qqnorm(rg_tab$THETA_POWER)
qqline(rg_tab$THETA_POWER)
hist(rg_tab$ALPHA_POWER)
qqnorm(rg_tab$ALPHA_POWER)
qqline(rg_tab$ALPHA_POWER)
hist(rg_tab$BETA_POWER)
qqnorm(rg_tab$BETA_POWER)
qqline(rg_tab$BETA_POWER)
## try z-transformation
for(i in 1:30) {
idx <-  rg_tab$ID == i
rg_tab$z_exp[idx] <- scale(rg_tab$AP_EXPONENT[idx])
rg_tab$z_theta[idx] <- scale(rg_tab$THETA_POWER[idx])
rg_tab$z_alpha[idx] <- scale(rg_tab$ALPHA_POWER[idx])
rg_tab$z_beta[idx] <- scale(rg_tab$BETA_POWER[idx])
}
## visualizing z data
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
shapiro.test(rg_tab$z_exp)
hist(rg_tab$z_theta)
qqnorm(rg_tab$z_theta)
qqline(rg_tab$z_theta)
hist(rg_tab$z_alpha)
qqnorm(rg_tab$z_alpha)
qqline(rg_tab$z_alpha)
hist(rg_tab$z_beta)
qqnorm(rg_tab$z_beta)
qqline(rg_tab$z_beta)
# try transforming exept ap_exp
rg_tab$t_exp <- sqrt(max(rg_tab$z_exp+1) - rg_tab$z_exp) # square-root/ negatively skewed data
rg_tab$t_theta <- 1/(rg_tab$z_theta+5) # inverse/ positively skewed data
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+5) # inverse/ positively skewed data
rg_tab$t_beta <- log10(rg_tab$z_beta+5) # log/ positively skewed data
## visualizing log data
hist(rg_tab$t_exp)
qqnorm(rg_tab$t_exp)
qqline(rg_tab$t_exp)
shapiro.test(rg_tab$t_exp)
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
qqline(rg_tab$t_beta)
shapiro.test(rg_tab$t_beta)
## read data
rg_tab <- read.csv("C:/Users/acer/Desktop/Master CAU/02_data/04_final/regression_table.csv")
## Add new variable for distance to STN
rg_tab$distance <- abs(rg_tab$DEPTH)
## Test for normal distribution useless: gets significant automatically with big samplesize
shapiro.test(rg_tab$AP_EXPONENT)
## visualizing data
hist(rg_tab$AP_EXPONENT)
## visualizing data
hist(rg_tab$AP_EXPONENT)
qqnorm(rg_tab$AP_EXPONENT)
qqline(rg_tab$AP_EXPONENT)
hist(rg_tab$THETA_POWER)
qqnorm(rg_tab$THETA_POWER)
qqline(rg_tab$THETA_POWER)
hist(rg_tab$ALPHA_POWER)
qqnorm(rg_tab$ALPHA_POWER)
qqline(rg_tab$ALPHA_POWER)
hist(rg_tab$BETA_POWER)
qqnorm(rg_tab$BETA_POWER)
qqline(rg_tab$BETA_POWER)
## try z-transformation
for(i in 1:30) {
idx <-  rg_tab$ID == i
rg_tab$z_exp[idx] <- scale(rg_tab$AP_EXPONENT[idx])
rg_tab$z_theta[idx] <- scale(rg_tab$THETA_POWER[idx])
rg_tab$z_alpha[idx] <- scale(rg_tab$ALPHA_POWER[idx])
rg_tab$z_beta[idx] <- scale(rg_tab$BETA_POWER[idx])
}
## visualizing z data
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
shapiro.test(rg_tab$z_exp)
hist(rg_tab$z_theta)
qqnorm(rg_tab$z_theta)
qqline(rg_tab$z_theta)
hist(rg_tab$z_alpha)
qqnorm(rg_tab$z_alpha)
qqline(rg_tab$z_alpha)
hist(rg_tab$z_beta)
qqnorm(rg_tab$z_beta)
qqline(rg_tab$z_beta)
# try transforming exept ap_exp
rg_tab$t_exp <- sqrt(max(rg_tab$z_exp+1) - rg_tab$z_exp) # square-root/ negatively skewed data
rg_tab$t_theta <- 1/(rg_tab$z_theta+5) # inverse/ positively skewed data
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+5) # inverse/ positively skewed data
rg_tab$t_beta <- log10(rg_tab$z_beta+5) # log/ positively skewed data
## visualizing log data
hist(rg_tab$t_exp)
qqnorm(rg_tab$t_exp)
qqline(rg_tab$t_exp)
shapiro.test(rg_tab$t_exp)
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
min(rg_tab$z_theta)
min(rg_tab$z_alpha)
min(rg_tab$z_beta)
rg_tab$t_theta <- 1/(rg_tab$z_theta+3) # inverse/ positively skewed data
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+3) # inverse/ positively skewed data
rg_tab$t_beta <- log10(rg_tab$z_beta+3) # log/ positively skewed data
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+5) # inverse/ positively skewed data
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+4) # inverse/ positively skewed data
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+10) # inverse/ positively skewed data
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+6) # inverse/ positively skewed data
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
rg_tab$t_theta <- 1/(rg_tab$z_theta+3) # inverse/ positively skewed data
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
## visualizing log data
hist(rg_tab$t_exp)
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
rg_tab$t_theta <- 1/(rg_tab$z_theta+4) # inverse/ positively skewed data
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
rg_tab$t_theta <- 1/(rg_tab$z_theta+5) # inverse/ positively skewed data
hist(rg_tab$t_theta)
qqnorm(rg_tab$t_theta)
qqline(rg_tab$t_theta)
shapiro.test(rg_tab$t_theta)
rg_tab$t_beta <- log10(rg_tab$z_beta+3) # log/ positively skewed data
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
qqline(rg_tab$t_beta)
shapiro.test(rg_tab$t_beta)
rg_tab$t_beta <- log10(rg_tab$z_beta+4) # log/ positively skewed data
shapiro.test(rg_tab$t_beta)
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
qqline(rg_tab$t_beta)
shapiro.test(rg_tab$t_beta)
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
qqline(rg_tab$t_beta)
shapiro.test(rg_tab$t_beta)
rg_tab$t_beta <- log10(rg_tab$z_beta+6) # log/ positively skewed data
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
qqline(rg_tab$t_beta)
shapiro.test(rg_tab$t_beta)
rg_tab$t_beta <- log10(rg_tab$z_beta+4) # log/ positively skewed data
shapiro.test(rg_tab$t_beta)
rg_tab$t_beta <- log10(rg_tab$z_beta+5) # log/ positively skewed data
shapiro.test(rg_tab$t_beta)
rg_tab$t_beta <- log10(rg_tab$z_beta+3) # log/ positively skewed data
shapiro.test(rg_tab$t_beta)
rg_tab$t_beta <- log10(rg_tab$z_beta+4) # log/ positively skewed data
hist(rg_tab$t_beta)
qqnorm(rg_tab$t_beta)
qqline(rg_tab$t_beta)
shapiro.test(rg_tab$t_beta)
rg_tab$t_alpha <- 1/(rg_tab$z_alpha+6) # inverse/ positively skewed data
hist(rg_tab$t_alpha)
qqnorm(rg_tab$t_alpha)
qqline(rg_tab$t_alpha)
shapiro.test(rg_tab$t_alpha)
## Regression ##
norm_exp <- lme(fixed=DEPTH ~ AP_EXPONENT, random=~1|ID, data = rg_tab)
install.packages('lme4')
## Regression ##
norm_exp <- lme(fixed=DEPTH ~ AP_EXPONENT, random=~1|ID, data = rg_tab)
install.packages('nlme')
## Regression ##
norm_exp <- lme(fixed=DEPTH ~ AP_EXPONENT, random=~1|ID, data = rg_tab)
library(nlme)
## Regression ##
norm_exp <- lme(fixed=DEPTH ~ AP_EXPONENT, random=~1|ID, data = rg_tab)
summary(norm_exp)
anova(norm_exp)
z_exp <- lme(fixed=DEPTH ~ z_exp, random=~1|ID, data = rg_tab)
summary(z_exp)
anova(z_exp)
full_model <- lme(fixed=DEPTH ~ z_exp + z_theta + z_alpha + z_beta, random=~1|ID, data=rg_tab)
summary(full_model)
anova(full_model)
# AP_EXPONENT
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
# THETA_POWER
hist(rg_tab$z_theta)
qqnorm(rg_tab$z_theta)
qqline(rg_tab$z_theta)
# ALPHA_POWER
hist(rg_tab$z_alpha)
qqnorm(rg_tab$z_alpha)
qqline(rg_tab$z_alpha)
# BETA_POWER
hist(rg_tab$z_beta)
qqnorm(rg_tab$z_beta)
qqline(rg_tab$z_beta)
rg_tab$DEPTH
anova(norm_exp)
anova(full_model)
summary(full_model)
shapiro.test(DEPTH)
shapiro.test(rg_tab$DEPTH)
ggdensity(rg_tab, x = "DEPTH", fill = "lightgray", title = "depth") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## Set libraries ##
library(ggplot2)
library(ggpubr)
library(moments)
library(nlme)
ggdensity(rg_tab, x = "DEPTH", fill = "lightgray", title = "depth") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## correlation between distance and beta ##
hist(rg_tab$DEPTH)
qqnorm(rg_tab$DEPTH)
qqline(rg_tab$z_DEPTH)
qqline(rg_tab$DEPTH)
## correlation between distance and beta ##
# we can't assume normal distribution for distance
hist(rg_tab$distance)
qqnorm(rg_tab$distance)
qqline(rg_tab$distance)
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to STN") +
scale_x_continuous(limits = c(-8, 8)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to STN") +
scale_x_continuous(limits = c(-15, 15)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## Set libraries ##
library(ggplot2)
library(ggpubr)
library(moments)
library(nlme)
## read data ##
rg_tab <- read.csv("C:/Users/acer/Desktop/Master CAU/02_data/04_final/regression_table.csv")
## Add new variable for distance to STN ##
rg_tab$distance <- abs(rg_tab$DEPTH)
## Assign data types ##
rg_tab$ID <- as.factor(rg_tab$ID)
rg_tab$SIDE <- as.factor(rg_tab$SIDE)
rg_tab$CHANNEL <- as.factor(rg_tab$CHANNEL)
## Test for normal distribution is bad: gets significant automatically with big samplesize ##
shapiro.test(rg_tab$AP_EXPONENT)
# AP_EXPONENT
hist(rg_tab$AP_EXPONENT)
qqnorm(rg_tab$AP_EXPONENT)
qqline(rg_tab$AP_EXPONENT)
ggdensity(rg_tab, x = "AP_EXPONENT", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-2, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$THETA_POWER)
qqnorm(rg_tab$THETA_POWER)
qqline(rg_tab$THETA_POWER)
ggdensity(rg_tab, x = "THETA_POWER", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$ALPHA_POWER)
qqnorm(rg_tab$ALPHA_POWER)
qqline(rg_tab$ALPHA_POWER)
ggdensity(rg_tab, x = "ALPHA_POWER", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$BETA_POWER)
qqnorm(rg_tab$BETA_POWER)
qqline(rg_tab$BETA_POWER)
ggdensity(rg_tab, x = "BETA_POWER", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-1, 2)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## try z-transformation ##
for(i in 1:30) {
idx <-  rg_tab$ID == i
rg_tab$z_exp[idx] <- scale(rg_tab$AP_EXPONENT[idx])
rg_tab$z_theta[idx] <- scale(rg_tab$THETA_POWER[idx])
rg_tab$z_alpha[idx] <- scale(rg_tab$ALPHA_POWER[idx])
rg_tab$z_beta[idx] <- scale(rg_tab$BETA_POWER[idx])
}
# AP_EXPONENT
hist(rg_tab$z_exp)
qqnorm(rg_tab$z_exp)
qqline(rg_tab$z_exp)
ggdensity(rg_tab, x = "z_exp", fill = "lightgray", title = "AP Exponent") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# THETA_POWER
hist(rg_tab$z_theta)
qqnorm(rg_tab$z_theta)
qqline(rg_tab$z_theta)
ggdensity(rg_tab, x = "z_theta", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
hist(rg_tab$z_alpha)
qqnorm(rg_tab$z_alpha)
qqline(rg_tab$z_alpha)
ggdensity(rg_tab, x = "z_alpha", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
hist(rg_tab$z_beta)
qqnorm(rg_tab$z_beta)
qqline(rg_tab$z_beta)
ggdensity(rg_tab, x = "z_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## try log-transformation ##
rg_tab$l_theta <- log10(rg_tab$THETA_POWER)
rg_tab$l_alpha <- log10(rg_tab$ALPHA_POWER)
rg_tab$l_beta <- log10(rg_tab$BETA_POWER)
# THETA_POWER
ggdensity(rg_tab, x = "l_theta", fill = "lightgray", title = "Theta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# ALPHA_POWER
ggdensity(rg_tab, x = "l_alpha", fill = "lightgray", title = "Alpha") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
# BETA_POWER
ggdensity(rg_tab, x = "l_beta", fill = "lightgray", title = "Beta") +
scale_x_continuous(limits = c(-5, 5)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
## correlation between distance and beta ##
# we can't assume normal distribution for distance
hist(rg_tab$distance)
qqnorm(rg_tab$distance)
qqline(rg_tab$distance)
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to STN") +
scale_x_continuous(limits = c(-15, 15)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
#visualize data
ggscatter(rg_tab, x = distance, y = z_beta, add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "spearman", xlab = "distance to STN", ylab = "beta power")
View(rg_tab)
ggscatter
ggdensity(rg_tab, x = "distance", fill = "lightgray", title = "Distance to STN") +
scale_x_continuous(limits = c(-20, 20)) +
stat_overlay_normal_density(color = "red", linetype = "dashed")
#visualize data
ggscatter(rg_tab, x = "distance", y = "z_beta", add = "reg.line",
conf.int = T, cor.coef = T, cor.method = "spearman", xlab = "distance to STN", ylab = "beta power")
# spearman correlation which is non-parametric
H <- cor.test(rg_tab$distance,rg_tab$z_beta, method = "spearman")
H
# spearman correlation which is non-parametric
H <- cor.test(rg_tab$distance,rg_tab$z_beta, method = "kendall")
H
## exploring ##
# regression is robust (source), data is close to normal distribution
full_model <- lme(fixed=DEPTH ~ z_exp + z_theta + z_alpha + z_beta, random=~1|ID, data=rg_tab)
summary(full_model)
anova(full_model)
z_exp <- lme(fixed=DEPTH ~ z_exp, random=~1|ID, data = rg_tab)
summary(z_exp)
anova(z_exp)
anova(full_model)
summary(full_model)
r2(full_model)
install.packages('sjmisc')
library(sjmisc)
r2(full_model)
library(lme4)
install.packages('lme4')
r2(full_model)
r2(full_model)
library(sjmisc)
r2(full_model)
install.packages('MuMIn')
library(MuMIn)
r.squaredGLMM(full_model)
summary(full_model)
anova(full_model)
coef(full_model)
summary(full_model)
summary(z_exp)
anova(full_model,z_exp)
wo_b_a <- lme(fixed=DEPTH ~ z_exp + z_thtea, random=~1|ID, data = rg_tab)
library(nlme)
wo_b_a <- lme(fixed=DEPTH ~ z_exp + z_thtea, random=~1|ID, data = rg_tab)
wo_b_a <- lme(fixed=DEPTH ~ z_exp + z_theta, random=~1|ID, data = rg_tab)
summary(wo_b_a)
anova(wo_b_a)
wo_b <- lme(fixed=DEPTH ~ z_exp + z_theta + z_alpha, random=~1|ID, data = rg_tab)
summary(wo_b)
anova(wo_b)
wo_a <- lme(fixed=DEPTH ~ z_exp + z_theta + z_beta, random=~1|ID, data = rg_tab)
summary(wo_a)
